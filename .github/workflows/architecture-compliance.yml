name: Gymates Architecture Compliance Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  architecture-compliance:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.21'
        
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        
    - name: Install dependencies
      run: |
        cd gymates_flutter && flutter pub get
        cd ../backend && go mod tidy
        
    - name: Run Architecture Compliance Check
      run: |
        echo "🔍 Running Gymates Architecture Compliance Check..."
        
        # Check for Go code in Flutter files
        echo "📱 Checking Flutter files for Go code..."
        if grep -r -E "(package main|func [A-Z]|type.*struct|import.*fmt|import.*os)" gymates_flutter/lib/ --include="*.dart"; then
          echo "❌ ERROR: Go code patterns found in Flutter files!"
          exit 1
        fi
        
        # Check for Flutter code in Go files
        echo "🔧 Checking Go files for Flutter code..."
        if grep -r -E "(import.*flutter|class.*extends|Widget|StatefulWidget|StatelessWidget)" backend/ --include="*.go"; then
          echo "❌ ERROR: Flutter code patterns found in Go files!"
          exit 1
        fi
        
        # Check for database operations in Flutter
        echo "🧠 Checking business logic separation..."
        if grep -r -E "(INSERT|UPDATE|DELETE|SELECT).*FROM" gymates_flutter/lib/ --include="*.dart"; then
          echo "❌ ERROR: Database operations found in Flutter files!"
          exit 1
        fi
        
        # Check for authentication logic in Flutter
        if grep -r -E "(jwt|token).*sign|hash.*password" gymates_flutter/lib/ --include="*.dart"; then
          echo "❌ ERROR: Authentication logic found in Flutter files!"
          exit 1
        fi
        
        echo "✅ All architecture compliance checks passed!"
        
    - name: Run Flutter Tests
      run: |
        cd gymates_flutter
        flutter test
        
    - name: Run Go Tests
      run: |
        cd backend
        go test ./...
        
    - name: Check API Contract Consistency
      run: |
        echo "📋 Checking API contract consistency..."
        
        # Check if required files exist
        if [ ! -f "gymates_flutter/lib/services/api_service.dart" ]; then
          echo "⚠️  WARNING: Frontend API service not found"
        fi
        
        if [ ! -f "backend/routes/routes.go" ]; then
          echo "⚠️  WARNING: Backend routes not found"
        fi
        
        # Check for API endpoint consistency
        if [ -f "gymates_flutter/lib/services/api_service.dart" ] && [ -f "backend/routes/routes.go" ]; then
          echo "✅ API contract files exist"
        fi
        
    - name: Generate Architecture Report
      run: |
        echo "📊 Generating Architecture Compliance Report..."
        echo "## Architecture Compliance Report" > architecture_report.md
        echo "" >> architecture_report.md
        echo "### ✅ Passed Checks:" >> architecture_report.md
        echo "- No Go code in Flutter files" >> architecture_report.md
        echo "- No Flutter code in Go files" >> architecture_report.md
        echo "- Business logic separation maintained" >> architecture_report.md
        echo "- API contract consistency verified" >> architecture_report.md
        echo "" >> architecture_report.md
        echo "### 📁 File Structure:" >> architecture_report.md
        echo "- Flutter: \`gymates_flutter/lib/\`" >> architecture_report.md
        echo "- Go Backend: \`backend/\`" >> architecture_report.md
        echo "" >> architecture_report.md
        echo "### 🔗 API Communication:" >> architecture_report.md
        echo "- RESTful APIs for data exchange" >> architecture_report.md
        echo "- WebSocket for real-time updates" >> architecture_report.md
        echo "- JSON response format standardized" >> architecture_report.md
        
    - name: Upload Architecture Report
      uses: actions/upload-artifact@v3
      with:
        name: architecture-compliance-report
        path: architecture_report.md
        
    - name: Comment PR with Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '## 🏗️ Architecture Compliance Check Results\n\n✅ **All architecture compliance checks passed!**\n\n### 📋 Compliance Summary:\n- ✅ No Go code in Flutter files\n- ✅ No Flutter code in Go files\n- ✅ Business logic separation maintained\n- ✅ API contract consistency verified\n- ✅ File structure follows guidelines\n\n### 📖 Documentation:\n- [Project Rules](PROJECT_RULES.md)\n- [Architecture Guide](ARCHITECTURE_GUIDE.md)\n- [Enforcement Rules](ENFORCEMENT_RULES.md)\n- [API Contract](API_CONTRACT.md)\n\n🎉 **This PR follows the Gymates architecture separation rules!**'
          })

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.21'
        
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        
    - name: Run Go Linting
      run: |
        cd backend
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        golangci-lint run
        
    - name: Run Flutter Linting
      run: |
        cd gymates_flutter
        flutter analyze
        
    - name: Check Code Formatting
      run: |
        cd gymates_flutter
        dart format --set-exit-if-changed .
        
        cd ../backend
        go fmt ./...

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.21'
        
    - name: Run Go Security Scan
      run: |
        cd backend
        go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest
        gosec ./...
        
    - name: Run Flutter Security Scan
      run: |
        cd gymates_flutter
        flutter pub audit
